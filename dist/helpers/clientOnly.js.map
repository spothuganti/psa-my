{"version":3,"file":"clientOnly.js","sources":["../../src/helpers/clientOnly.ts"],"sourcesContent":["export { clientOnly }\r\n\r\nimport { h, nextTick, shallowRef, defineComponent, onBeforeMount } from 'vue'\r\nimport type { Component, SlotsType } from 'vue'\r\n\r\n/**\r\n * Load and render a component only on the client-side.\r\n *\r\n * https://vike.dev/clientOnly\r\n */\r\nfunction clientOnly<ComponentLoaded extends Component>(\r\n  load: () => Promise<ComponentLoaded | { default: ComponentLoaded }>,\r\n) {\r\n  const componentWrapper = defineComponent({\r\n    inheritAttrs: false,\r\n\r\n    setup(_, { attrs, slots }) {\r\n      const componentLoaded = shallowRef<ComponentLoaded | null>(null)\r\n      const error = shallowRef<unknown>(null)\r\n\r\n      onBeforeMount(async () => {\r\n        try {\r\n          const ret = await load()\r\n          componentLoaded.value = 'default' in ret ? ret.default : ret\r\n        } catch (e) {\r\n          console.error('Error while loading clientOnly() component:', e)\r\n          // wait for nextTick to avoid hydration errors\r\n          nextTick(() => {\r\n            error.value = e\r\n          })\r\n        }\r\n      })\r\n\r\n      return () => {\r\n        if (componentLoaded.value !== null) {\r\n          return h(componentLoaded.value, attrs, slots)\r\n        }\r\n        if (slots['client-only-fallback']) {\r\n          return slots['client-only-fallback']({ error: error.value, attrs })\r\n        }\r\n        // if the user doesn't want clientOnly() to use <template #fallback> then he should define a (empty) <template #client-only-fallback>\r\n        if (slots['fallback']) {\r\n          return slots['fallback']({ error: error.value, attrs })\r\n        }\r\n      }\r\n    },\r\n\r\n    slots: {} as SlotsType<{\r\n      fallback: { error: unknown; attrs: Record<string, any> }\r\n      'client-only-fallback': { error: unknown; attrs: Record<string, any> }\r\n    }>,\r\n  })\r\n  return componentWrapper as typeof componentWrapper & ComponentLoaded\r\n}\r\n"],"names":[],"mappings":";AAUA,SAAS,WACP,MACA;AACA,QAAM,mBAAmB,gBAAgB;AAAA,IACvC,cAAc;AAAA,IAEd,MAAM,GAAG,EAAE,OAAO,SAAS;AACnB,YAAA,kBAAkB,WAAmC,IAAI;AACzD,YAAA,QAAQ,WAAoB,IAAI;AAEtC,oBAAc,YAAY;AACpB,YAAA;AACI,gBAAA,MAAM,MAAM;AAClB,0BAAgB,QAAQ,aAAa,MAAM,IAAI,UAAU;AAAA,iBAClD,GAAG;AACF,kBAAA,MAAM,+CAA+C,CAAC;AAE9D,mBAAS,MAAM;AACb,kBAAM,QAAQ;AAAA,UAAA,CACf;AAAA,QACH;AAAA,MAAA,CACD;AAED,aAAO,MAAM;AACP,YAAA,gBAAgB,UAAU,MAAM;AAClC,iBAAO,EAAE,gBAAgB,OAAO,OAAO,KAAK;AAAA,QAC9C;AACI,YAAA,MAAM,sBAAsB,GAAG;AAC1B,iBAAA,MAAM,sBAAsB,EAAE,EAAE,OAAO,MAAM,OAAO,OAAO;AAAA,QACpE;AAEI,YAAA,MAAM,UAAU,GAAG;AACd,iBAAA,MAAM,UAAU,EAAE,EAAE,OAAO,MAAM,OAAO,OAAO;AAAA,QACxD;AAAA,MAAA;AAAA,IAEJ;AAAA,IAEA,OAAO,CAAC;AAAA,EAAA,CAIT;AACM,SAAA;AACT;"}