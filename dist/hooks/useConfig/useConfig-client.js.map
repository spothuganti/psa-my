{"version":3,"file":"useConfig-client.js","sources":["../../../src/hooks/useConfig/useConfig-client.ts"],"sourcesContent":["export { useConfig }\r\n\r\nimport type { PageContext } from 'vike/types'\r\nimport type { PageContextInternal } from '../../types/PageContext.js'\r\nimport type { ConfigFromHook } from '../../types/Config.js'\r\nimport { usePageContext } from '../usePageContext.js'\r\nimport { getPageContext } from 'vike/getPageContext'\r\nimport { applyHeadSettings } from '../../integration/applyHeadSettings.js'\r\nimport { watchEffect } from 'vue'\r\n\r\nfunction useConfig(): (config: ConfigFromHook) => void {\r\n  // Vike hook\r\n  let pageContext = getPageContext() as PageContext & PageContextInternal\r\n  if (pageContext) return (config: ConfigFromHook) => setPageContextConfigFromHook(config, pageContext)\r\n\r\n  // Component\r\n  pageContext = usePageContext()\r\n  return (config: ConfigFromHook) => {\r\n    watchEffect(() => {\r\n      if (!pageContext._headAlreadySetWrapper!.val) {\r\n        setPageContextConfigFromHook(config, pageContext)\r\n      } else {\r\n        applyHead(config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction setPageContextConfigFromHook(config: ConfigFromHook, pageContext: PageContextInternal) {\r\n  pageContext._configFromHook ??= {}\r\n  Object.assign(pageContext._configFromHook, config)\r\n}\r\n\r\nfunction applyHead(config: ConfigFromHook) {\r\n  const { title, lang } = config\r\n  applyHeadSettings(title, lang)\r\n}\r\n"],"names":[],"mappings":";;;;AAUA,SAAS,YAA8C;AAErD,MAAI,cAAc;AAClB,MAAI,YAAoB,QAAA,CAAC,WAA2B,6BAA6B,QAAQ,WAAW;AAGpG,gBAAc,eAAe;AAC7B,SAAO,CAAC,WAA2B;AACjC,gBAAY,MAAM;AACZ,UAAA,CAAC,YAAY,uBAAwB,KAAK;AAC5C,qCAA6B,QAAQ,WAAW;AAAA,MAAA,OAC3C;AACL,kBAAU,MAAM;AAAA,MAClB;AAAA,IAAA,CACD;AAAA,EAAA;AAEL;AAEA,SAAS,6BAA6B,QAAwB,aAAkC;AAC9F,cAAY,oBAAZ,YAAY,kBAAoB;AACzB,SAAA,OAAO,YAAY,iBAAiB,MAAM;AACnD;AAEA,SAAS,UAAU,QAAwB;AACnC,QAAA,EAAE,OAAO,KAAS,IAAA;AACxB,oBAAkB,OAAO,IAAI;AAC/B;"}